################################################## 
# ScheduleExpertService_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from ScheduleExpertService_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class ScheduleExpertServiceLocator:
    ScheduleExpertServiceBI_address = "http://localhost/ScheduleExpertService/services/ScheduleExpertService"
    def getScheduleExpertServiceBIAddress(self):
        return ScheduleExpertServiceLocator.ScheduleExpertServiceBI_address
    def getScheduleExpertServiceBI(self, url=None, **kw):
        return ScheduleExpertServiceSoapBindingSOAP(url or ScheduleExpertServiceLocator.ScheduleExpertServiceBI_address, **kw)

# Methods
class ScheduleExpertServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: scheduleExpertForTestimony
    def scheduleExpertForTestimony(self, request):
        if isinstance(request, scheduleExpertForTestimony) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(scheduleExpertForTestimonyResponse.typecode)
        return response

    # op: cancelExpertForTestimony
    def cancelExpertForTestimony(self, request):
        if isinstance(request, cancelExpertForTestimony) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(cancelExpertForTestimonyResponse.typecode)
        return response

scheduleExpertForTestimony = ns0.scheduleExpertForTestimony_Dec().pyclass

scheduleExpertForTestimonyResponse = ns0.scheduleExpertForTestimonyResponse_Dec().pyclass

cancelExpertForTestimony = ns0.cancelExpertForTestimony_Dec().pyclass

cancelExpertForTestimonyResponse = ns0.cancelExpertForTestimonyResponse_Dec().pyclass
